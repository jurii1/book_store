/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import pkg1.BookAuthor;
import pkg1.Datasource;

/**
 *
 * @author Juri
 */
public class UserFrame extends javax.swing.JFrame {
    
    public UserFrame() {
        initComponents();
        setLocationRelativeTo(null);
        boughtBooksTextArea.setEditable(false);
        resultsTextArea.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userDataLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        boughtBooksTextArea = new javax.swing.JTextArea();
        booksLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultsTextArea = new javax.swing.JTextArea();
        searchTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        logoutButton = new javax.swing.JButton();
        searchByAuthorButton = new javax.swing.JButton();
        searchByTitleButton = new javax.swing.JButton();
        buyButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        redeemCouponButton = new javax.swing.JButton();
        idLabel = new javax.swing.JLabel();
        creditsLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        userDataLabel.setText("User");

        boughtBooksTextArea.setColumns(20);
        boughtBooksTextArea.setRows(5);
        jScrollPane1.setViewportView(boughtBooksTextArea);

        booksLabel.setText("Books:");

        resultsTextArea.setColumns(20);
        resultsTextArea.setRows(5);
        jScrollPane2.setViewportView(resultsTextArea);

        jLabel1.setText("Enter:");

        logoutButton.setText("Log out");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        searchByAuthorButton.setText("Author");
        searchByAuthorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByAuthorButtonActionPerformed(evt);
            }
        });

        searchByTitleButton.setText("Title");
        searchByTitleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByTitleButtonActionPerformed(evt);
            }
        });

        buyButton.setText("Buy");
        buyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Search by:");

        redeemCouponButton.setText("Redeem");
        redeemCouponButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redeemCouponButtonActionPerformed(evt);
            }
        });

        idLabel.setText("ID");

        creditsLabel.setText("0");

        jLabel3.setText("Credits");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(booksLabel))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(logoutButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(redeemCouponButton))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(searchByTitleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(buyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(exitButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(searchByAuthorButton, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(idLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(userDataLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(creditsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userDataLabel)
                    .addComponent(idLabel)
                    .addComponent(creditsLabel)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booksLabel)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchByTitleButton)
                            .addComponent(searchByAuthorButton))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exitButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(logoutButton)
                        .addComponent(buyButton)
                        .addComponent(redeemCouponButton)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        Login login = new Login();
        login.setVisible(true);
        dispose();
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        Datasource.getInstance().close();
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void redeemCouponButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redeemCouponButtonActionPerformed
        try{
            if(searchTextField.getText().isEmpty())
                throw new NumberFormatException();
            
            int coupon = Integer.parseInt(searchTextField.getText());
        
            Datasource.getInstance().reedemCoupon(Integer.parseInt(getIdLabel().getText()), coupon);
            creditsLabel.setText(""+Datasource.getInstance().getCredits(Integer.parseInt(getIdLabel().getText())));
        
            searchTextField.setText(null);
        
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(rootPane, "Please enter a valid code!");
        }
        catch (SQLException sql){
            JOptionPane.showMessageDialog(rootPane, sql.getMessage());
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_redeemCouponButtonActionPerformed

    private void buyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyButtonActionPerformed
        try{
            if(searchTextField.getText().isEmpty())
                throw new NullPointerException("Enter an ISBN!");
            
            Datasource.getInstance().insertTransaction(Integer.parseInt(idLabel.getText()), searchTextField.getText());
            creditsLabel.setText(""+Datasource.getInstance().getCredits(Integer.parseInt(getIdLabel().getText())));
            
            List<BookAuthor> boughtBooks = Datasource.getInstance().queryBoughtBooksView(Integer.parseInt(idLabel.getText()));
                if(boughtBooks == null) {
                    return;
                }
                
            StringBuilder sb = new StringBuilder("Title\tAuthor\tYear");
                
            for(BookAuthor b : boughtBooks) {
                sb.append("\n"+b.getTitle() + "\t" + b.getName() + " " + b.getLastName() + "\t" + b.getYear());
            }
            
            boughtBooksTextArea.setText(sb.toString());
            resultsTextArea.setText(null);
            searchTextField.setText(null);
        }
        catch(NullPointerException e){
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(rootPane, "Please enter an ISBN!");
        }
        catch(SQLException sql){
            JOptionPane.showMessageDialog(rootPane, sql.getMessage());
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_buyButtonActionPerformed

    private void searchByTitleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByTitleButtonActionPerformed
        try{
            if(searchTextField.getText().isEmpty())
                throw new NumberFormatException();

            List<BookAuthor> bav = Datasource.getInstance().queryBooksAuthorsViewFromTitle(searchTextField.getText());
            if(bav.isEmpty()) {
                throw new SQLException("We do not have the book you are looking for!");
            }
            StringBuilder sb = new StringBuilder("");
            
            for(BookAuthor b : bav) {
                sb.append(b.getTitle() + " " + b.getName()+ " " + b.getLastName()+ " " + b.getYear() + " " + b.getIsbn() + " (" + b.getPrice()+" credits)\n");
            }
            resultsTextArea.setText(sb.toString());
            searchTextField.setText(null);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(rootPane, "Please enter a title!");
        }
        catch(SQLException sql){
            JOptionPane.showMessageDialog(rootPane, sql.getMessage());
        }
        catch(Exception e){
        }
    }//GEN-LAST:event_searchByTitleButtonActionPerformed

    private void searchByAuthorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByAuthorButtonActionPerformed
        try{
            if(searchTextField.getText().isEmpty())
                throw new NumberFormatException();
            
            String[] splited = searchTextField.getText().split("\\s+");
            
            if(splited.length != 2)
                throw new Exception("Please enter a name and a last name");
            
            List<BookAuthor> bav = Datasource.getInstance().queryBooksAuthorsViewFromAuthor(splited[0], splited[1]);
            if(bav.isEmpty()) {
                throw new SQLException("We don't have any book from the author you are looking for!");
            }
            StringBuilder sb = new StringBuilder("");
            
            for(BookAuthor b : bav) {
                sb.append(b.getTitle() + " " + b.getName()+ " " + b.getLastName()+ " " + b.getYear() + " " + b.getIsbn() + " (" + b.getPrice()+" credits)\n");
            }
            resultsTextArea.setText(sb.toString());
            searchTextField.setText(null);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(rootPane, "Please enter a name and last name!");
        }
        catch(SQLException sql){
            JOptionPane.showMessageDialog(rootPane, sql.getMessage());
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_searchByAuthorButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel booksLabel;
    private javax.swing.JTextArea boughtBooksTextArea;
    private javax.swing.JButton buyButton;
    private javax.swing.JLabel creditsLabel;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton logoutButton;
    private javax.swing.JButton redeemCouponButton;
    private javax.swing.JTextArea resultsTextArea;
    private javax.swing.JButton searchByAuthorButton;
    private javax.swing.JButton searchByTitleButton;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JLabel userDataLabel;
    // End of variables declaration//GEN-END:variables

    public javax.swing.JLabel getUserDataLabel() {
        return userDataLabel;
    }

    public javax.swing.JLabel getCreditsLabel() {
        return creditsLabel;
    }

    public javax.swing.JLabel getIdLabel() {
        return idLabel;
    }

    public javax.swing.JTextArea getBoughtBooksTextArea() {
        return boughtBooksTextArea;
    }




}
